plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.google.cloud.tools.appengine' version '2.4.2'
}

group = 'wf.hackathon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'
repositories {
	mavenCentral()
	maven {
		url "https://repo.spring.io/release"
	}
}

ext {
	set('springCloudGcpVersion', "3.2.1")
	set('springCloudVersion', "2021.0.0")
}
jar {
	manifest {
		attributes 'Main-Class': 'wf.hackathon.diversitydimension.DiversitydimensionApplication'
	}
}

dependencies {
	//implementation(project(':ui'))
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	//implementation 'co.elastic.clients:elasticsearch-java:8.2.0'
	//implementation 'org.springframework.boot:spring-boot:2.6.7'
	//implementation 'org.springframework.data:spring-data-elasticsearch'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.11.4'
	implementation 'jakarta.json:jakarta.json-api:2.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation("com.yugabyte:jdbc-yugabytedb:42.3.3")
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
	implementation 'com.zaxxer:HikariCP:4.0.3'

	implementation 'com.google.appengine:appengine-api-1.0-sdk:+'
	//implementation 'com.google.cloud.tools:appengine-gradle-plugin:2.4.3'
	//implementation 'org.akhikhl.gretty:gretty:+'
	//implementation 'com.google.cloud:spring-cloud-gcp-starter'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation("com.yugabyte:testcontainers-yugabytedb:1.0.0-beta-4")
}
//gretty {
//	servletContainer = 'jetty9'  // What App Engine Flexible uses
//}
appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		projectId = 'diversitydimension'
		version = '2'
		stopPreviousVersion = true
		promote = true
	}
}
dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}